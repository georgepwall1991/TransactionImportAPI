// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransactionImportAPI.Model;

namespace TransactionImportAPI.Migrations
{
    [DbContext(typeof(TransactionDbContext))]
    [Migration("20210621201423_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TransactionImportAPI.Data.DTO.Country", b =>
                {
                    b.Property<int>("ISOCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ISOCodeID");

                    b.HasIndex("TransactionIdentifier");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TransactionImportAPI.Data.DTO.Transaction", b =>
                {
                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionIdentifier");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TransactionImportAPI.Data.DTO.TransactionStatus", b =>
                {
                    b.Property<int>("TransactionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionStatusId");

                    b.HasIndex("TransactionIdentifier");

                    b.ToTable("TransactionStatuses");
                });

            modelBuilder.Entity("TransactionImportAPI.Data.DTO.Country", b =>
                {
                    b.HasOne("TransactionImportAPI.Data.DTO.Transaction", null)
                        .WithMany("ISOCode")
                        .HasForeignKey("TransactionIdentifier");
                });

            modelBuilder.Entity("TransactionImportAPI.Data.DTO.TransactionStatus", b =>
                {
                    b.HasOne("TransactionImportAPI.Data.DTO.Transaction", null)
                        .WithMany("TransactionStatus")
                        .HasForeignKey("TransactionIdentifier");
                });

            modelBuilder.Entity("TransactionImportAPI.Data.DTO.Transaction", b =>
                {
                    b.Navigation("ISOCode");

                    b.Navigation("TransactionStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
